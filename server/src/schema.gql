# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateUserInput {
  """Email"""
  email: String!

  """User Password"""
  password: String!

  """Username"""
  username: String!
}

type LoginResponse {
  access_token: String!
  user: UserView!
}

"""Login Input"""
input LoginUserInput {
  """Password used when user registered."""
  password: String!

  """Email used when user registered."""
  username: String!
}

type Mutation {
  """Creates a record input on the database and returns it."""
  createRecord(input: NewRecordInput!): Record!
  login(loginUserInput: LoginUserInput!): LoginResponse!
  register(createUserInput: CreateUserInput!): UserView!
}

input NewRecordInput {
  albumCover: String!
  albumName: String!
  artistName: String!
  description: String!
  genres: [String!]!
  price: Float!
  producers: [ProducerInput!]!
  qtyInStock: Int!
  rating: Float!
  releaseDate: Int!
  reviews: [ReviewInput!]!
  reviewsQty: Float!
}

"""user"""
type OrderType {
  address: String!

  """Id of the user associated with the order"""
  buyerID: ID!
  city: String!
  houseNumber: String!

  """Order Id"""
  id: ID!
  itemsPrice: String!
  postalCode: String!
  products: [Record!]!
  shippingPrice: String!
  state: String!
  status: String!
  totalPrice: String!
}

"""review """
type Producer {
  name: String!
}

input ProducerInput {
  name: String!
}

type Query {
  findOne(username: String!): User!

  """Returns one record entity by Id."""
  record(id: String!): Record!

  """Returns all record entries in de database."""
  records: [Record!]!
}

"""record """
type Record {
  albumCover: String!
  albumName: String!
  artistName: String!
  description: String!
  genres: [String!]!
  id: ID!
  price: Float!
  producers: [Producer!]!
  qtyInStock: Int!
  rating: Float!
  releaseDate: Int!
  reviews: [Review!]!
  reviewsQty: Float!
}

"""review """
type Review {
  comment: String!
  name: String!
  rating: Float!
}

input ReviewInput {
  comment: String!
  name: String!
  rating: Float!
}

"""user"""
type User {
  """Email"""
  email: String!

  """UserID"""
  id: ID!
  orders: [OrderType!]!

  """Password"""
  password: String!

  """UserName"""
  username: String!
}

"""user"""
type UserView {
  """Email"""
  email: String!

  """UserID"""
  id: ID!

  """Username"""
  username: String!
}